#!/usr/bin/env bash
set -eu -o pipefail

output=
TEST_PASSED=false
trap '  ec=$?
        $TEST_PASSED || echo "FAILURE: unexpected exit; code=$ec"
' 0

####################################################################

export PROJDIR=$(cd "$(dirname "$0")" && pwd -P)
cd "$PROJDIR"

optargs=()
pactivate_test=true
pae_test=true
while [[ ${#@} -gt 0 ]]; do case "$1" in
    -C)     shift; rm -rf ".build/";;
    -e)     shift; pactivate_test=false;;
    -E)     shift; pae_test=false;;
    -*)     optargs+=("$1"); shift;;
    *)      break;;
esac; done
#   Default images to test:
[[ ${#@} -eq 0 ]] \
    && set python:3.10-alpine  debian:11 ubuntu:22.04

header() {
    echo '┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
    echo '┃' "$@"
}

$pactivate_test && for img in "$@"; do
    header tscript/pactivate "${optargs[@]}" "$img"
    ./tscript/pactivate "${optargs[@]}" "$img"
done

$pae_test && {
    header tscript/pae "${optargs[@]}"
    ./tscript/pae "${optargs[@]}"
}

header "All tests passed"
    echo '┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
TEST_PASSED=true
